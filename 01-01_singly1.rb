# まず要素を保持する配列( value )と次のノードのインデックスを保持する配列( next_ptr )を用意しましょう。
# 両方とも 1,024 個の要素を持つ配列で、 value の先頭の要素の値と末尾の要素の値は - 1 、
# next_ptr の先頭の要素の値は 1,023 、 next_ptr の末尾の要素の値は - 1 で初期化します。
# また、末尾の要素の一つ前の要素のインデックスを保持する変数( back )と、
# value に要素が入っていない最も小さいインデックスを保持する変数( empty_min_idx )を用意します。
# back は 0 、 empty_min_idx は 1 で初期化します。

INPUT1 = <<~"EOS"
  2
  4
  1
EOS
OUTPUT1 = <<~"EOS"
  4
  1
EOS

INPUT2 = <<~"EOS"
  2
  9
  1
EOS
OUTPUT2 = <<~"EOS"
  9
  1
EOS

def solve(input_str)
  value = Array.new(1024)
  next_ptr = Array.new(1024)
  value[0] = -1
  value[-1] = -1
  next_ptr[0] = 1023
  next_ptr[-1] = -1
  back = 0
  empty_min_idx = 1

  _, *a = input_str.split.map(&:to_i)
  a
end

p solve(INPUT1)

=begin
片方向リスト実装編 step 1 (paizaランク C 相当)
問題にチャレンジして、ユーザー同士で解答を教え合ったり、コードを公開してみよう！

シェア用URL:
https://paiza.jp/works/mondai/list_primer/list_primer__singly_step1
問題文のURLをコピーする
 チャレンジする言語

得意な言語を選択してください
コードを書いて解いてみる
 チケット使用済
問題
 下記の問題をプログラミングしてみよう！
このメニューでは連結リストというデータ構造をそれぞれ実装します。
その中でも前半は片方向リストと呼ばれるデータ構造を扱います。片方向リストは以下の操作をおこなえるデータ構造です。

・リストの先頭、末尾に要素を追加・削除する ... O( 1 )
・リストの特定の位置に定数個の要素を追加・削除する ... O( N )
・リストの特定の位置に K 個の要素を追加・削除する ... O( N + K )
・リストの特定の位置の要素を参照する ... O( N )

リスト構造に要素 A_1, A_2, A_3 をこの順で追加した場合、以下の画像のようになります。
各ノードは開始ノードから順に一方向で連結され、終了ノードへと続きます。開始ノードおよび終了ノードは変更されません。
片方向リストにおいて、各要素へのアクセスは基本的に先頭の要素から順にたどる必要があります。

まず要素を保持する配列( value )と次のノードのインデックスを保持する配列( next_ptr )を用意しましょう。
両方とも 1,024 個の要素を持つ配列で、 value の先頭の要素の値と末尾の要素の値は - 1 、
next_ptr の先頭の要素の値は 1,023 、 next_ptr の末尾の要素の値は - 1 で初期化します。

また、末尾の要素の一つ前の要素のインデックスを保持する変数( back )と、
value に要素が入っていない最も小さいインデックスを保持する変数( empty_min_idx )を用意します。
back は 0 、 empty_min_idx は 1 で初期化します。

これらの必要な変数や配列をまとめると、以下の画像のようになります。

ここからがあなたのタスクです。 N 個の要素からなる数列 A が与えられます。
上記の配列 value , next_ptr 、変数 back , empty_min_idx を用意した後、 A をそのまま出力してください。

入力される値
N
A_1
A_2
...
A_N

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
数列 A の要素を改行区切りで出力してください。末尾に改行を入れ、余計な文字、空行を含んではいけません。


A_1
A_2
...
A_N
条件
すべてのテストケースにおいて、以下の条件をみたします。

・ N は 1 以上 100 未満
・ A_i は 1 以上 100 未満

入力例1
2
4
1

出力例1
4
1

入力例2
2
9
1

出力例2
9
1
=end
